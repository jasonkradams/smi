{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Spokane Mountaineers Documentation","text":"<p>Welcome to the Spokane Mountaineers documentation portal. This site is a growing collection of how-to guides, internal processes, and technical documentation to support club operations, technology tools, and volunteer contributors.</p>"},{"location":"#what-youll-find-here","title":"What You'll Find Here","text":"<ul> <li>Step-by-step guides for common workflows</li> <li>Reference documentation for club systems</li> <li>Walkthroughs for maintaining Salesforce and our public-facing site</li> <li>Technical solutions we've implemented (like session keep-alive)</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Use the sidebar to explore topics by category. If you're not sure where to begin, here are a few helpful starting points:</p> <ul> <li>How To Guides</li> <li>Automations</li> <li>About</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>This site is maintained by volunteers. If you'd like to help document a process or fix something out of date, please reach out to the tech team webdev@spokanemountaineers.org.</p>"},{"location":"about/","title":"About This Documentation","text":"<p>Welcome to the official documentation site for the Spokane Mountaineers \u2014 a nonprofit community of adventurers, educators, and volunteers dedicated to promoting safe and inclusive outdoor recreation since 1915.</p> <p>This site is maintained by club members to provide:</p> <ul> <li>\ud83d\udcd8 How-to guides for managing club activities and technology</li> <li>\ud83d\udee0 Administrative tools and resources for leaders and volunteers</li> <li>\ud83d\udca1 Best practices for website management, event registration, and communications</li> </ul>"},{"location":"about/#who-we-are","title":"\ud83c\udfd4 Who We Are","text":"<p>The Spokane Mountaineers is an all-volunteer organization committed to the responsible enjoyment of the outdoors. We offer year-round activities in:</p> <ul> <li>Mountaineering</li> <li>Rock climbing</li> <li>Backcountry skiing</li> <li>Hiking and backpacking</li> <li>Mountain biking</li> <li>Conservation and stewardship</li> </ul> <p>Our members range from first-time hikers to seasoned climbers, all sharing a passion for learning and the natural world.</p>"},{"location":"about/#how-this-site-works","title":"\ud83d\udcda How This Site Works","text":"<p>This site is built with MkDocs and the Material for MkDocs theme. It lives on GitHub and is open to contributions from any club member.</p> <p>Want to contribute? Start here:</p> <ul> <li>\ud83d\udcbb Visit the GitHub repository</li> <li>\u270d\ufe0f Submit an issue or request a guide</li> </ul>"},{"location":"about/#thanks","title":"\ud83d\ude4f Thanks","text":"<p>Special thanks to all our volunteers, instructors, and behind-the-scenes helpers who make the Spokane Mountaineers thrive \u2014 on the trails and online.</p> <p>\u201cThe mountains are calling and I must go.\u201d \u2014 John Muir</p>"},{"location":"automation/","title":"Automation","text":"<p>This section documents internal automations and scheduled jobs used to manage membership, system syncs, and administrative workflows for Spokane Mountaineers.</p> <p>Each automation is designed to reduce manual work, ensure consistency, and support the club\u2019s online infrastructure.</p>"},{"location":"automation/#included-jobs","title":"Included Jobs","text":"<ul> <li>Scheduled: Add Members To Conservation Group   Ensures all active site users are part of the Conservation Group and logs changes for audit.</li> <li>User Sync: Salesforce to Google Workspace   Automates the synchronization of active Salesforce members to Google Workspace accounts.</li> <li>User Sync Flow</li> <li>Google Apps Script     A script that receives a list of active Salesforce members and synchronizes them to Google Workspace.</li> <li>User Sync Checklist     A checklist to verify the correct operation of the automated sync process.</li> </ul> <p>More scheduled flows and automation tools will be added to this section as they are developed.</p>"},{"location":"automation/scheduled-add-members-to-conservation-group/","title":"\ud83d\udd04 Scheduled Flow: Add Members To Conservation Group","text":"<p>This scheduled Salesforce Flow ensures that all eligible site users (Community Users) are members of the Conservation Chatter Group, and logs each action for auditing.</p>"},{"location":"automation/scheduled-add-members-to-conservation-group/#access","title":"Access","text":"<ul> <li>Flow: Scheduled: Add Members To Conservation Group</li> <li>Logs: Conservation Group Membership Logs</li> <li>GitHub: Scheduled_Add_Members_To_Conservation_Group.flow-meta.xml</li> </ul>"},{"location":"automation/scheduled-add-members-to-conservation-group/#schedule","title":"\ud83d\udcc6 Schedule","text":"<ul> <li>Runs Once at 04:30 AM Pacific</li> <li>Type: Scheduled Flow</li> <li>Trigger: Platform-Scheduled, not user-initiated</li> </ul> <p>Note: This flow has been deactivated to ensure members who Opt Out of the Conservation group are not put back into teh group the next day.</p>"},{"location":"automation/scheduled-add-members-to-conservation-group/#purpose","title":"\ud83c\udfaf Purpose","text":"<p>This Flow:</p> <ul> <li>Adds eligible users (active site users) to a specific Chatter Group (CollaborationGroup).</li> <li>Skips users who are already members of the group.</li> <li>Logs each operation (only added) into the <code>Conservation_Group_Membership_Log__c</code> object.     Can be viewed here: Conservation Group Membership Logs</li> </ul>"},{"location":"automation/scheduled-add-members-to-conservation-group/#criteria-for-eligible-users","title":"\ud83d\udccb Criteria for Eligible Users","text":"<p>The flow targets active Community users, defined as:</p> <pre><code>User.IsActive = true\nAND (\n  User.UserType = 'Customer Portal User' OR\n  User.UserType = 'PowerCustomerSuccess' OR\n  User.UserType = 'PowerPartner'\n)\n</code></pre> <p>These users are queried via a Get Records element labeled Get_User_Records.</p>"},{"location":"automation/scheduled-add-members-to-conservation-group/#flow-structure","title":"\ud83e\uddf1 Flow Structure","text":""},{"location":"automation/scheduled-add-members-to-conservation-group/#1-get-existing-group-memberships","title":"1. Get Existing Group Memberships","text":"<ul> <li>Retrieves all CollaborationGroupMember records for the Conservation Group.</li> <li>Group ID is hardcoded as: 0F91N000000m2jESAQ.</li> </ul> <p>\u28002. Get Active Community Users * Loads active site users matching the criteria above.</p> <p>\u28003. Loop Through Each User * For each user:   * Filters existing memberships to check if the user is already in the group.   * Uses a Decision node (Member in Group?) to branch:</p>"},{"location":"automation/scheduled-add-members-to-conservation-group/#decision-logic","title":"\ud83e\udd16 Decision Logic","text":""},{"location":"automation/scheduled-add-members-to-conservation-group/#if-the-user-is-not-already-a-group-member","title":"\u274c If the user is not already a group member","text":"<ul> <li>Assigns:</li> <li>CollaborationGroupId = 0F91N000000m2jESAQ</li> <li>MemberId = User.Id</li> <li>CollaborationRole = Standard</li> <li>Adds the new member record to a collection for batch creation.</li> <li>Logs the action with:</li> <li>Message__c = \"Added To Conservation Group\"</li> </ul> <p>\u2800\u2705 If the user is already a member: * Loops through their existing CollaborationGroupMember record(s) * Logs the status:   * Message__c = \"Already a Member\"</p>"},{"location":"automation/scheduled-add-members-to-conservation-group/#record-creation","title":"\ud83d\udce6 Record Creation","text":"<p>At the end of all processing:</p> <ul> <li>The flow bulk-creates all new CollaborationGroupMember records.</li> <li>It also bulk-creates all Conservation_Group_Membership_Log__c log entries.</li> </ul>"},{"location":"automation/scheduled-add-members-to-conservation-group/#key-variables-and-resources","title":"\ud83d\udee0 Key Variables and Resources","text":"Variable Name Type Description <code>variable_collaboration_group_members</code> Collection of CollaborationGroupMember Holds new group members to create <code>variable_conservation_group_logs</code> Collection of Conservation_Group_Membership_Log__c Holds logs for both added and skipped users <code>variable_collaboration_group_member</code> Single CollaborationGroupMember Template record used per user <code>variable_conservation_log</code> Single Conservation_Group_Membership_Log__c Template log record used per user"},{"location":"automation/scheduled-add-members-to-conservation-group/#logging-details","title":"\ud83e\uddfe Logging Details","text":"<p>Each log record stores: * User_ID__c * Username__c * Email__c * Group_Member_Id__c * Role__c * Updated_At__c (timestamp) * Message__c: either \"Added To Conservation Group\" or \"Already a Member\"</p>"},{"location":"automation/scheduled-add-members-to-conservation-group/#edge-cases-handled","title":"\u26a0\ufe0f Edge Cases Handled","text":"<ul> <li>Users not in the group are added and logged.</li> <li>Users already in the group are skipped.</li> <li>The Chatter Group ID is hardcoded to prevent accidental misrouting.</li> <li>Only users who are eligible site users are processed.</li> </ul>"},{"location":"automation/scheduled-add-members-to-conservation-group/#monitoring-auditing","title":"\ud83d\udcc8 Monitoring &amp; Auditing","text":"<p>Admins can monitor execution by:</p> <ul> <li>Querying the Conservation_Group_Membership_Log__c object</li> <li>Filtering by Updated_At__c or Message__c</li> <li>Verifying membership through CollaborationGroupMember records</li> </ul>"},{"location":"automation/scheduled-add-members-to-conservation-group/#future-enhancements","title":"\ud83d\ude80 Future Enhancements","text":"Feature Notes Dynamic Group Selection Use custom metadata or Flow input variables instead of hardcoding Group ID Error Handling Add fault paths to log or notify errors during record creation Notification Email Optionally email a summary of actions after each run"},{"location":"automation/user-sync-google-workspace/","title":"User Sync: Salesforce to Google Workspace","text":"<p>This automation ensures that only active members of the Spokane Mountaineers have user accounts in Google Workspace, and that:</p> <ul> <li>All active users are placed in the <code>IdP Users Only</code> organizational unit (OU)</li> <li>Inactive users are suspended or removed from Google Workspace</li> </ul>"},{"location":"automation/user-sync-google-workspace/#overview","title":"Overview","text":"<p>The architecture relies on Salesforce Flows and Google Apps Script, requiring no external server or infrastructure.</p> <p></p>"},{"location":"automation/user-sync-google-workspace/#components","title":"Components","text":""},{"location":"automation/user-sync-google-workspace/#salesforce-org","title":"Salesforce Org","text":"<ul> <li>Scheduled Flow: Queries all members where <code>User.IsActive == \"True\"</code></li> <li>Named Credential: Configured to securely send data to a Google Apps Script endpoint via HTTP</li> </ul>"},{"location":"automation/user-sync-google-workspace/#google-workspace","title":"Google Workspace","text":"<ul> <li>Google Apps Script Web App: Receives a list of active members and compares it to the users in the <code>IdP Users Only</code> OU</li> <li>Google Workspace Admin SDK: Used by the script to create, update, suspend, or delete user accounts</li> </ul>"},{"location":"automation/user-sync-google-workspace/#sync-behavior","title":"Sync Behavior","text":"Case Action User is Active in Salesforce but not in Google Create Workspace account User is Active in both NoOp User is not Active in Salesforce but exists in Google Delete account"},{"location":"automation/user-sync-google-workspace/#file-structure-for-docs","title":"File Structure for Docs","text":"<pre><code>automation/user-sync-google-workspace/\n\u251c\u2500\u2500 index.md                    # Overview of automation goals &amp; approach\n\u251c\u2500\u2500 sync-architecture.md        # Diagram + flow description\n\u251c\u2500\u2500 salesforce-flow.md          # Flow config and Named Credential steps\n\u251c\u2500\u2500 google-apps-script.md       # Google script, scopes, and deployment\n\u251c\u2500\u2500 testing-checklist.md        # Manual dry-run instructions\n</code></pre>"},{"location":"automation/user-sync-google-workspace/google-apps-script/","title":"Google Apps Script for User Sync with Google Workspace","text":""},{"location":"automation/user-sync-google-workspace/google-apps-script/#purpose","title":"Purpose","text":"<p>This script receives a list of active Salesforce members and synchronizes them to Google Workspace by:</p> <ul> <li>Creating accounts in the IdP Only Users OU if they don\u2019t exist</li> <li>Updating user information if needed</li> <li>Suspending accounts not present in the received list</li> </ul>"},{"location":"automation/user-sync-google-workspace/google-apps-script/#requirements","title":"Requirements","text":"<ul> <li>Google Workspace domain with admin privileges</li> <li>Service account with domain-wide delegation</li> <li>Apps Script published as a Web App (with Anyone access or restricted to the domain)</li> </ul>"},{"location":"automation/user-sync-google-workspace/google-apps-script/#setup","title":"Setup","text":""},{"location":"automation/user-sync-google-workspace/google-apps-script/#1-create-a-google-apps-script","title":"1. Create a Google Apps Script","text":"<ol> <li>Go to https://script.google.com/</li> <li>Create a new script project</li> <li>Replace the default code with the script below</li> </ol>"},{"location":"automation/user-sync-google-workspace/google-apps-script/#2-script-code-basic-example","title":"2. Script Code (Basic Example)","text":"<pre><code>const ADMIN_EMAIL = \"admin@yourdomain.org\"; // Must be super admin\nconst TARGET_OU = \"/IdP Only Users\";\n\nfunction doPost(e) {\nconst activeUsers = JSON.parse(e.postData.contents);\nconst activeEmails = new Set(activeUsers.map(u =&gt; u.federationId));\n\nconst existingUsers = AdminDirectory.Users.list({\n    customer: \"my_customer\",\n    maxResults: 500,\n    query: `orgUnitPath='${TARGET_OU}'`\n}).users || [];\n\n// Update or create users\nfor (const user of activeUsers) {\n    try {\n    const existing = AdminDirectory.Users.get(user.federationId);\n    AdminDirectory.Users.update({\n        orgUnitPath: TARGET_OU,\n        name: {\n        givenName: user.firstName,\n        familyName: user.lastName\n        },\n        suspended: false\n    }, user.federationId);\n    } catch (err) {\n    // User not found, create\n    AdminDirectory.Users.insert({\n        primaryEmail: user.federationId,\n        orgUnitPath: TARGET_OU,\n        name: {\n        givenName: user.firstName,\n        familyName: user.lastName\n        },\n        password: Math.random().toString(36).slice(-8),\n    });\n    }\n}\n\n// Suspend users not in active list\nfor (const user of existingUsers) {\n    if (!activeEmails.has(user.primaryEmail)) {\n    AdminDirectory.Users.update({\n        suspended: true\n    }, user.primaryEmail);\n    }\n}\n\nreturn ContentService.createTextOutput(\"OK\");\n}\n</code></pre> <p>Note: Ensure the service account has impersonation rights for ADMIN_EMAIL.</p>"},{"location":"automation/user-sync-google-workspace/google-apps-script/#3-enable-apis","title":"3. Enable APIs","text":"<p>In the Apps Script project:</p> <ul> <li>Go to Services &gt; Add a Service</li> <li>Add Admin SDK (AdminDirectory)</li> </ul> <p>Also, enable it in Google Cloud Console:</p> <ul> <li>Enable Admin SDK API</li> <li>Set up OAuth Consent Screen</li> <li>Set up Domain-wide Delegation</li> </ul> <p>\u2800</p>"},{"location":"automation/user-sync-google-workspace/google-apps-script/#4-deploy-as-web-app","title":"4. Deploy as Web App","text":"<p>1 Click Deploy &gt; Manage deployments 2 Choose Web App     * Execute as: Me     * Who has access: Anyone or Anyone in domain 3 Deploy and copy the URL for use in Salesforce Named Credential</p> <p>\u2800</p>"},{"location":"automation/user-sync-google-workspace/google-apps-script/#5-scopes-required","title":"5. Scopes Required","text":"<p>Add the following scopes to your manifest (appsscript.json): <pre><code>{\n  \"oauthScopes\": [\n    \"https://www.googleapis.com/auth/admin.directory.user\",\n    \"https://www.googleapis.com/auth/admin.directory.orgunit\",\n    \"https://www.googleapis.com/auth/script.external_request\",\n    \"https://www.googleapis.com/auth/script.scriptapp\"\n  ]\n}\n</code></pre></p>"},{"location":"automation/user-sync-google-workspace/google-apps-script/#security-considerations","title":"Security Considerations","text":"<ul> <li>Restrict Web App access if possible</li> <li>Use a validation token if needed</li> <li>Rotate passwords or default values for new users</li> </ul>"},{"location":"automation/user-sync-google-workspace/salesforce-flow/","title":"Salesforce Flow for User Synchronization with Google Workspace","text":""},{"location":"automation/user-sync-google-workspace/salesforce-flow/#purpose","title":"Purpose","text":"<p>This scheduled Flow identifies all active members in Salesforce and sends their user details to a Google Apps Script endpoint for account synchronization.</p>"},{"location":"automation/user-sync-google-workspace/salesforce-flow/#requirements","title":"Requirements","text":"<ul> <li>Custom field: <code>User.FederationIdentifier</code> (used as username/email in Google Workspace)</li> <li>Membership status field: e.g., <code>User.IsActive</code></li> <li>Named Credential configured to securely call the Google Web App endpoint</li> </ul>"},{"location":"automation/user-sync-google-workspace/salesforce-flow/#steps","title":"Steps","text":""},{"location":"automation/user-sync-google-workspace/salesforce-flow/#1-create-a-named-credential","title":"1. Create a Named Credential","text":"<ol> <li>Navigate to Setup &gt; Named Credentials</li> <li>Create a new credential:</li> <li>Label: <code>Google Workspace Webhook</code></li> <li>Name: <code>Google_Workspace_Webhook</code></li> <li>URL: <code>https://script.google.com/macros/s/XXXXX/exec</code> (your script URL)</li> <li>Identity Type: Anonymous (or Named Principal if using token)</li> <li>Generate Authorization Header: false</li> </ol>"},{"location":"automation/user-sync-google-workspace/salesforce-flow/#2-define-an-external-credential-if-using-oauth","title":"2. Define an External Credential (if using OAuth)","text":"<ol> <li>Go to External Credentials under Setup</li> <li>Define scopes for your Google Apps Script endpoint (optional)</li> </ol>"},{"location":"automation/user-sync-google-workspace/salesforce-flow/#3-create-the-scheduled-flow","title":"3. Create the Scheduled Flow","text":"<ul> <li>Object: <code>User</code></li> <li>Filter: <code>User.IsActive Equals 'True'</code></li> <li>Fields to collect:</li> <li>First Name</li> <li>Last Name</li> <li>Federation ID (used as the Workspace username)</li> </ul>"},{"location":"automation/user-sync-google-workspace/salesforce-flow/#4-add-an-http-callout-action","title":"4. Add an HTTP Callout Action","text":"<ul> <li>Drag in the Action element &gt; Select Send HTTP Request</li> <li>Use the Named Credential: <code>Google_Workspace_Webhook</code></li> <li>Method: <code>POST</code></li> <li>Body: Build JSON from Flow variables (loop over records to build a list)</li> </ul> <pre><code>[\n  {\n    \"email\": \"first.last@example.com\",\n    \"firstName\": \"First\",\n    \"lastName\": \"Last\",\n    \"federationId\": \"first.last@example.com.smi\"\n  },\n  ...\n]\n</code></pre>"},{"location":"automation/user-sync-google-workspace/salesforce-flow/#5-handle-errors-and-logging","title":"5. Handle Errors and Logging","text":"<ul> <li>Optionally log HTTP responses</li> <li>Use fault paths to handle connection issues</li> </ul>"},{"location":"automation/user-sync-google-workspace/salesforce-flow/#6-schedule-the-flow","title":"6. Schedule the Flow","text":"<ul> <li>Set to run daily (or as needed)</li> </ul>"},{"location":"automation/user-sync-google-workspace/user-sync-testing-checklist/","title":"Testing Checklist: Salesforce to Google Workspace User Sync","text":"<p>This checklist helps verify the correct operation of the automated sync process between Salesforce and Google Workspace.</p>"},{"location":"automation/user-sync-google-workspace/user-sync-testing-checklist/#pre-deployment-validation","title":"\ud83d\udd04 Pre-Deployment Validation","text":""},{"location":"automation/user-sync-google-workspace/user-sync-testing-checklist/#google-workspace-setup","title":"\u2705 Google Workspace Setup","text":"<ul> <li> Verify \"IdP Users Only\" OU exists</li> <li> Create a test user manually to confirm admin privileges</li> <li> Enable Admin SDK API in the associated Google Cloud project</li> <li> Add Admin SDK service in Apps Script project</li> <li> Set up domain-wide delegation and validate impersonation</li> </ul>"},{"location":"automation/user-sync-google-workspace/user-sync-testing-checklist/#google-apps-script","title":"\u2705 Google Apps Script","text":"<ul> <li> Script deployed as a Web App (test URL manually)</li> <li> Proper scopes set in <code>appsscript.json</code></li> <li> <code>doPost()</code> correctly parses example JSON input</li> <li> Use <code>Logger.log()</code> or <code>console.log()</code> to confirm data flow during tests</li> </ul>"},{"location":"automation/user-sync-google-workspace/user-sync-testing-checklist/#salesforce-setup","title":"\u2705 Salesforce Setup","text":"<ul> <li> Named Credential configured with correct endpoint</li> <li> Scheduled Flow filters active members correctly</li> <li> Flow correctly maps and serializes JSON payload</li> <li> Test callout works manually (via Flow debug or Apex)</li> </ul>"},{"location":"automation/user-sync-google-workspace/user-sync-testing-checklist/#dry-run-manual-tests","title":"\ud83d\udd2c Dry Run (Manual Tests)","text":"<ul> <li> Use a single known active user in test payload</li> <li> Confirm Google Workspace account is created or updated in <code>IdP Users Only</code></li> <li> Add a second user, run sync again \u2014 both should be present</li> <li> Remove first user from active list, run sync \u2014 user should be deleted</li> </ul>"},{"location":"automation/user-sync-google-workspace/user-sync-testing-checklist/#fault-and-edge-case-handling","title":"\ud83d\udee1\ufe0f Fault and Edge Case Handling","text":"<ul> <li> Invalid federation ID \u2192 logged gracefully, not fatal</li> <li> Missing federation ID/name fields \u2192 logged, user skipped</li> <li> Google API failure \u2192 caught and logged (does not halt loop)</li> <li> Retry flow handles partial failures (e.g., retry next day)</li> </ul>"},{"location":"automation/user-sync-google-workspace/user-sync-testing-checklist/#daily-job-verification","title":"\ud83e\uddea Daily Job Verification","text":"<ul> <li> Enable schedule (e.g., daily)</li> <li> Logs show successful sync and account updates</li> <li> Suspended users are removed from <code>IdP Users Only</code></li> <li> New active members appear automatically</li> </ul>"},{"location":"automation/user-sync-google-workspace/user-sync-testing-checklist/#post-deployment-monitoring","title":"\ud83d\udcdd Post-Deployment Monitoring","text":"<ul> <li> Enable email alerts for Apps Script failures</li> <li> Audit user creation/suspension logs weekly</li> <li> Spot-check OU for stale users monthly</li> </ul>"},{"location":"automation/user-sync-google-workspace/google-app-script/","title":"Google Apps Script: User Sync Endpoint","text":"<p>This script serves as the backend for syncing active members from Salesforce into Google Workspace. It is deployed as a Web App and receives an HTTP POST request from Salesforce containing the list of users to sync.</p>"},{"location":"automation/user-sync-google-workspace/google-app-script/#responsibilities","title":"Responsibilities","text":"<ul> <li>Accept POST requests with JSON payload of active users</li> <li>Compare incoming list with current users in the <code>IdP Users Only</code> OU</li> <li>Create missing users</li> <li>Update existing user info and OU placement</li> <li>Suspend users no longer marked active in Salesforce</li> </ul>"},{"location":"automation/user-sync-google-workspace/google-app-script/#files-in-this-folder","title":"Files in this Folder","text":"<pre><code>automations/user-sync-google-workspace/google-app-script/\n\u251c\u2500\u2500 index.md               # This overview file\n\u251c\u2500\u2500 script.gs              # Main logic for handling sync\n\u251c\u2500\u2500 alerts.gs              # Optional alerting logic for errors\n\u251c\u2500\u2500 appsscript.json        # Manifest with required scopes\n</code></pre>"},{"location":"automation/user-sync-google-workspace/google-app-script/#permissions-scopes","title":"Permissions &amp; Scopes","text":"<p>You must: - Enable the Admin SDK API in your Google Cloud project - Add the following scopes to your manifest:</p> <pre><code>{\n  \"oauthScopes\": [\n    \"https://www.googleapis.com/auth/admin.directory.user\",\n    \"https://www.googleapis.com/auth/admin.directory.orgunit\",\n    \"https://www.googleapis.com/auth/script.external_request\",\n    \"https://www.googleapis.com/auth/script.scriptapp\",\n    \"https://www.googleapis.com/auth/gmail.send\" // if using alerting\n  ]\n}\n</code></pre>"},{"location":"automation/user-sync-google-workspace/google-app-script/#deployment-steps","title":"Deployment Steps","text":"<ol> <li>Open Google Apps Script: https://script.google.com</li> <li>Add the required files and scopes</li> <li>Click Deploy &gt; Manage Deployments &gt; New Deployment</li> <li>Choose type Web App</li> <li>Execute as: Me</li> <li>Who has access: Anyone (or domain-only)</li> <li>Copy the Web App URL for use in your Salesforce Named Credential</li> </ol> <p>See <code>user_sync.js</code> and <code>alerts.js</code> for implementation details.</p>"},{"location":"google-workspace/","title":"Google Workspace Documentation","text":"<p>This section covers configuration and automation related to Google Workspace for Spokane Mountaineers.</p> <p>It includes tools and practices that ensure secure, consistent management of user accounts, directory information, and integrations with external systems like Salesforce.</p>"},{"location":"google-workspace/#subsections","title":"\ud83d\udcc2 Subsections","text":""},{"location":"google-workspace/#user-synchronization","title":"\ud83d\udd04 User Synchronization","text":"<ul> <li>Salesforce to Google Workspace Sync: Automated provisioning of user accounts based on membership status.</li> <li>Google Apps Script Sync Logic: Backend script handling account creation, updates, and deletions.</li> </ul>"},{"location":"google-workspace/#directory-customization","title":"\ud83d\udcca Directory Customization","text":"<ul> <li>Querying Custom Schema: Mountaineers.PublicEmail: How to access and export public-facing email addresses for communication lists.</li> </ul>"},{"location":"google-workspace/#tools","title":"\ud83d\udd27 Tools","text":"<ul> <li>GAM: Command-line tool to interact with Google Workspace Admin SDK.</li> <li>Admin SDK Directory API: REST API for programmatically managing user accounts and attributes.</li> </ul> <p>For access requests or contributions, contact the Web Dev team at <code>webdev@spokanemountaineers.org</code>.</p>"},{"location":"google-workspace/querying-custom-user-schema/","title":"Querying Custom Schema: Mountaineers.PublicEmail","text":"<p>This document explains how to access and query the custom schema field <code>Mountaineers.PublicEmail</code> that is populated by the user sync script.</p>"},{"location":"google-workspace/querying-custom-user-schema/#schema-definition","title":"\ud83e\udde9 Schema Definition","text":"Schema Name Field Name Type Description <code>Mountaineers</code> <code>PublicEmail</code> String Public-facing email for mailing lists <p>This field is stored under the <code>customSchemas</code> object in each user's Google Workspace profile. Example JSON structure:</p> <pre><code>\"customSchemas\": {\n  \"Mountaineers\": {\n    \"PublicEmail\": \"public-facing@example.com\"\n  }\n}\n</code></pre>"},{"location":"google-workspace/querying-custom-user-schema/#query-via-admin-sdk","title":"\ud83d\udd0d Query via Admin SDK","text":"<p>Use the Directory API <code>users.list</code> endpoint with <code>projection=full</code>:</p> <pre><code>GET https://admin.googleapis.com/admin/directory/v1/users?customer=my_customer&amp;orgUnitPath=/IdP%20Users%20Only&amp;projection=full\n</code></pre> <p>Parse each user's schema:</p> <pre><code>user.customSchemas?.Mountaineers?.PublicEmail\n</code></pre> <p>Reference: Admin SDK Directory API - Users: list</p>"},{"location":"google-workspace/querying-custom-user-schema/#query-via-gam-cli","title":"\ud83e\uddf0 Query via GAM CLI","text":""},{"location":"google-workspace/querying-custom-user-schema/#show-for-a-single-user","title":"Show for a single user:","text":"<pre><code>gam users show &lt;user@example.com&gt; fields customSchemas\n</code></pre>"},{"location":"google-workspace/querying-custom-user-schema/#export-for-all-users-in-ou","title":"Export for all users in OU:","text":"<pre><code>gam print users query \"orgUnitPath='/IdP Users Only'\" \\\n  fields primaryEmail,customSchemas.Mountaineers.PublicEmail \\\n  &gt; mountaineers-emails.csv\n</code></pre> <p>This enables easy generation of mailing lists based on public-facing emails independent of Google usernames.</p>"},{"location":"how-to-guides/","title":"How-To Guides","text":"<p>Welcome to the How-To Guides section of the Spokane Mountaineers documentation site. These guides are designed to walk you through common tasks, administrative processes, and website management tools that keep our organization running smoothly.</p> <p>Whether you're a club admin, event leader, or website contributor, this is your go-to spot for practical step-by-step instructions.</p>"},{"location":"how-to-guides/#available-guides","title":"\ud83d\udcd8 Available Guides","text":"<ul> <li>KeepAlive Sessions: Prevent users from being logged out too quickly.</li> <li>Update Experience Cloud Favicon: Customize the browser tab icon for our public Salesforce site.</li> <li>Website Editing</li> <li>Custom Calendar LWC Guide: Learn how to deploy, configure, and use the Custom Calendar Lightning Web Component.</li> <li>Google Workspace SAML IdP: Set up Google Workspace as a SAML Identity Provider for Salesforce.</li> <li>Auto-Generate Federation ID: Automatically generate Federation IDs for new user accounts in Salesforce.</li> <li>Batch Update Federation IDs: Update existing user Federation IDs in Salesforce to match Google Workspace accounts.</li> <li>Add Federation ID Logs to the App Launcher: Create a custom tab for viewing Federation ID update logs in Salesforce.</li> <li>Delete Federation ID From Users: Remove Federation IDs from users in Salesforce.</li> <li>Bulk Delete Events in Salesforce: Safely identify and bulk delete unwanted Event records in Salesforce.</li> <li>Salesforce Development Console Cheatsheet: A quick reference for using the Salesforce Developer Console, including common tasks and useful tips.</li> </ul> <p>More guides coming soon!</p> <p>\ud83d\udee0 Have a task you'd like documented? Open a GitHub issue or contribute a page.</p>"},{"location":"how-to-guides/add-federation-id-logs-to-the-app-launcher/","title":"How to Add Federation ID Update Logs to the App Launcher","text":"<p>After creating a custom object for logging Federation ID updates, you may want to easily find and search these log records through the Salesforce App Launcher.</p> <p>By default, custom objects don't appear in the App Launcher until you create a Custom Tab.</p> <p>This guide walks you through how to make your Federation ID Update Logs searchable and accessible.</p>"},{"location":"how-to-guides/add-federation-id-logs-to-the-app-launcher/#step-1-create-a-custom-tab","title":"\ud83d\udee0 Step 1: Create a Custom Tab","text":"<ol> <li>Go to Setup (Gear Icon \u2192 Setup).</li> <li>In the Quick Find box, search for Tabs.</li> <li>Click on Tabs under User Interface.</li> <li>Scroll down to the Custom Object Tabs section.</li> <li>Click New.</li> </ol>"},{"location":"how-to-guides/add-federation-id-logs-to-the-app-launcher/#step-2-configure-the-new-tab","title":"\ud83e\udde9 Step 2: Configure the New Tab","text":"<ul> <li>Object: Select <code>Federation ID Update Log</code> (or the name you used).</li> <li>Tab Style: Pick any icon (for example, a document or checkmark).</li> <li>Tab Label: It will default to the object name; you can customize if you like.</li> </ul> <p>\u2705 Leave all other defaults.</p> <p>Click Next.</p>"},{"location":"how-to-guides/add-federation-id-logs-to-the-app-launcher/#step-3-set-tab-visibility","title":"\ud83e\udde9 Step 3: Set Tab Visibility","text":"<ul> <li>Set Tab Visibility for profiles:</li> <li>Typically, choose Default On for Admin profiles.</li> <li>Or customize based on who should see the logs.</li> </ul> <p>Click Next.</p>"},{"location":"how-to-guides/add-federation-id-logs-to-the-app-launcher/#step-4-add-to-apps-optional","title":"\ud83e\udde9 Step 4: Add to Apps (Optional)","text":"<p>Salesforce will prompt you to add this tab to various Apps (like \"Sales\" or \"Service Console\"). You can skip this for now unless you specifically want it showing inside a particular app.</p> <p>Click Save.</p>"},{"location":"how-to-guides/add-federation-id-logs-to-the-app-launcher/#step-5-search-in-app-launcher","title":"\ud83d\udd0d Step 5: Search in App Launcher","text":"<p>Now that the Tab is created:</p> <ol> <li>Go to the App Launcher (grid icon top left).</li> <li>Search for <code>Federation ID Update Logs</code>.</li> <li>Click on it.</li> </ol> <p>\u2705 You can now view, search, and manage your log records easily.</p>"},{"location":"how-to-guides/add-federation-id-logs-to-the-app-launcher/#summary","title":"\ud83d\udccb Summary","text":"Step Action 1 Setup \u2192 Tabs \u2192 New Custom Object Tab 2 Select <code>Federation ID Update Log</code> as the object 3 Pick a Tab Style and configure visibility 4 Save and deploy 5 Search for your logs in the App Launcher <p>\u2728 Once added, you can also create List Views, Filters, and Reports based on your Federation ID Update Logs.</p>"},{"location":"how-to-guides/auto-generate-federation-id/","title":"Auto-Generate Federation ID for New User Accounts (Updated)","text":"<p>\u26a0\ufe0f Note: Do not assume all usernames have .smi. See logic below.</p> <p>When creating a new user account in Salesforce, we automatically generate a Federation ID based on the user's provided Username field.</p> <p>This Federation ID must match the account ID format expected by our future Google Workspace system.</p> <p>\ud83d\udea8 Important: Users do not have direct login access to Google Workspace, but Federation IDs must match exactly for SSO and directory synchronization.</p>"},{"location":"how-to-guides/auto-generate-federation-id/#how-it-works-updated","title":"\ud83d\udee0\ufe0f How It Works (Updated)","text":"<p>When a new user is added:</p> <ul> <li>The Username is used as the base, not Email.</li> <li>If the Username ends with <code>.smi</code>, that part is removed.</li> <li>The <code>@</code> symbol is replaced with an <code>_</code>.</li> <li>The final Federation ID is appended with <code>@spokanemountaineers.org</code>.</li> </ul> <p>This ensures uniqueness, compatibility, and consistency across the system.</p>"},{"location":"how-to-guides/auto-generate-federation-id/#updated-formula-details","title":"\ud83e\udde9 Updated Formula Details","text":"<p>Salesforce Flow Formula (Text):</p> <pre><code>SUBSTITUTE(\n  IF(\n    CONTAINS({!User.Username}, \".smi\"),\n    LEFT({!User.Username}, FIND(\".smi\", {!User.Username}) - 1),\n    {!User.Username}\n  ),\n  \"@\",\n  \"_\"\n) &amp; \"@spokanemountaineers.org\"\n</code></pre>"},{"location":"how-to-guides/auto-generate-federation-id/#what-this-formula-does","title":"\u270f\ufe0f What this formula does:","text":"<ul> <li>If the Username contains <code>.smi</code>, remove it.</li> <li>If not, use the Username as-is.</li> <li>Replace the <code>@</code> symbol with <code>_</code>.</li> <li>Append <code>@spokanemountaineers.org</code> to the end.</li> </ul> <p>\u2705 This handles users whether <code>.smi</code> is present or missing, avoiding duplicates and errors.</p>"},{"location":"how-to-guides/auto-generate-federation-id/#example-outputs","title":"\ud83d\udcda Example Outputs","text":"Username Resulting Federation ID <code>_a.first.last@gmail.com.smi</code> <code>_a.first.last_gmail.com@spokanemountaineers.org</code> <code>first.list+example@example.com</code> <code>first.list+example_example.com@spokanemountaineers.org</code> <code>jane.doe@yahoo.com.smi</code> <code>jane.doe_yahoo.com@spokanemountaineers.org</code> <code>mark.smith@outlook.com</code> <code>mark.smith_outlook.com@spokanemountaineers.org</code>"},{"location":"how-to-guides/auto-generate-federation-id/#why-this-matters","title":"\ud83d\udd25 Why This Matters","text":"<ul> <li>Uniqueness: Federation IDs based on Username are globally unique within Salesforce.</li> <li>Consistency: Usernames that vary (with or without <code>.smi</code>) are handled properly.</li> <li>Compliance: Matches Google Workspace expectations for user mapping.</li> <li>Automation: No manual Federation ID entry needed.</li> </ul>"},{"location":"how-to-guides/auto-generate-federation-id/#summary","title":"\ud83d\udccb Summary","text":"<ul> <li>Federation IDs are now based on Username, not Email.</li> <li><code>.smi</code> suffixes are removed if present.</li> <li><code>@</code> symbols are replaced with <code>_</code>.</li> <li>Appends <code>@spokanemountaineers.org</code>.</li> <li>This protects against duplicates and Salesforce field integrity errors.</li> </ul> <p>\u2728 If future usernames or rules change, this formula should be reviewed and updated accordingly.</p>"},{"location":"how-to-guides/batch-update-federation-id/","title":"Batch Update Federation IDs for Existing Users","text":"<p>This guide walks through how to batch-update Federation IDs for existing Salesforce users and create a simple audit log of updates.</p> <p>\ud83d\udea8 Federation IDs must match the account ID format expected by our Google Workspace system. New users are handled automatically, but existing users must be updated manually one time.</p>"},{"location":"how-to-guides/batch-update-federation-id/#overview","title":"\ud83d\udee0 Overview","text":"<p>We created a Flow that: - Finds users missing a Federation ID, - Calculates a correct Federation ID based on their email, - Updates the User record, - Logs the change to a custom \"Federation ID Update Log\" object, - Allows easy review with a List View.</p>"},{"location":"how-to-guides/batch-update-federation-id/#step-1-create-the-federation-id-update-log-object","title":"\ud83e\udde9 Step 1: Create the Federation ID Update Log Object","text":"<ol> <li>Go to Setup \u2192 Object Manager \u2192 Create \u2192 Custom Object.</li> <li>Fill out:</li> <li>Label: <code>Federation ID Update Log</code></li> <li>Plural Label: <code>Federation ID Update Logs</code></li> <li>Object Name: <code>FederationIDUpdateLog</code></li> <li>Record Name: Auto-Number, format <code>FID-{0000}</code></li> <li> <p>Description: <code>Log of Federation ID updates performed by automated flows.</code></p> </li> <li> <p>Check these options:</p> </li> <li>\u2705 Allow Reports</li> <li>\u274c Allow Activities (optional)</li> <li> <p>\u2705 Deployment Status: Deployed</p> </li> <li> <p>Save.</p> </li> </ol>"},{"location":"how-to-guides/batch-update-federation-id/#add-custom-fields-to-the-object","title":"Add Custom Fields to the Object:","text":"Field Label Field Type API Name Notes User ID Text (255) <code>UserId__c</code> Salesforce User Id Old Federation ID Text (255) <code>OldFederationId__c</code> Previous value New Federation ID Text (255) <code>NewFederationId__c</code> New value Email Email <code>Email__c</code> User\u2019s email address Updated At Date/Time <code>UpdatedAt__c</code> When the update happened"},{"location":"how-to-guides/batch-update-federation-id/#step-2-create-the-batch-update-flow","title":"\ud83d\udee0 Step 2: Create the Batch Update Flow","text":"<ol> <li>Go to Setup \u2192 Flows \u2192 New Flow.</li> <li>Type: Autolaunched Flow (no trigger).</li> </ol>"},{"location":"how-to-guides/batch-update-federation-id/#build-the-flow","title":"Build the Flow:","text":""},{"location":"how-to-guides/batch-update-federation-id/#1-get-records-find-users","title":"1. Get Records: Find Users","text":"<ul> <li>Object: <code>User</code></li> <li>Conditions:</li> <li><code>FederationId IS NULL</code></li> <li><code>Profile.Name CONTAINS 'Experience'</code></li> <li>Store: All Records</li> </ul>"},{"location":"how-to-guides/batch-update-federation-id/#2-loop-through-users","title":"2. Loop Through Users","text":"<ul> <li>Add a Loop over the collection of users without Federation IDs.</li> </ul> <p>Inside the Loop:</p>"},{"location":"how-to-guides/batch-update-federation-id/#3-create-assignment-calculate-new-federation-id","title":"3. Create Assignment: Calculate New Federation ID","text":"<p>Create a Formula Resource:</p> <pre><code>LOWER(\n  LEFT({!LoopedUser.Email}, FIND(\"@\", {!LoopedUser.Email}) - 1)\n  &amp; \"_\"\n  &amp; LEFT(\n      MID({!LoopedUser.Email}, FIND(\"@\", {!LoopedUser.Email}) + 1, LEN({!LoopedUser.Email})),\n      FIND(\".\", MID({!LoopedUser.Email}, FIND(\"@\", {!LoopedUser.Email}) + 1, LEN({!LoopedUser.Email}))) - 1\n    )\n  &amp; \"@spokanemountaineers.org\"\n)\n</code></pre> <p>Assign this value to the FederationId field for the current User.</p>"},{"location":"how-to-guides/batch-update-federation-id/#4-create-record-log-the-update","title":"4. Create Record: Log the Update","text":"<ul> <li>Create a new record in <code>Federation ID Update Log</code>:</li> <li>UserId__c = <code>{!LoopedUser.Id}</code></li> <li>OldFederationId__c = <code>{!LoopedUser.FederationId}</code></li> <li>NewFederationId__c = Calculated Federation ID</li> <li>Email__c = <code>{!LoopedUser.Email}</code></li> <li>UpdatedAt__c = <code>Now()</code></li> </ul>"},{"location":"how-to-guides/batch-update-federation-id/#5-after-loop-update-records","title":"5. After Loop: Update Records","text":"<ul> <li>Use Update Records to update all modified users at once (bulk safe).</li> </ul>"},{"location":"how-to-guides/batch-update-federation-id/#step-3-schedule-the-flow","title":"\ud83d\udee0 Step 3: Schedule the Flow","text":"<ol> <li>In the Flow Settings, click Set a Schedule.</li> <li>Set it to run once immediately, or at a quiet time (overnight).</li> </ol> <p>\u2705 This will batch process all users missing Federation IDs.</p>"},{"location":"how-to-guides/batch-update-federation-id/#step-4-add-a-list-view-for-log-visibility","title":"\ud83d\udd0e Step 4: Add a List View for Log Visibility","text":"<ol> <li>Go to App Launcher \u2192 Search Federation ID Update Logs.</li> <li>If needed, Create a Tab in Setup \u2192 Tabs \u2192 New Custom Object Tab.</li> <li>On the \"Federation ID Update Logs\" screen:</li> <li>Click the Gear Icon \u2699\ufe0f.</li> <li>Click New List View.</li> <li>Name it something like:</li> <li><code>All Logs</code></li> <li>or <code>Recent Federation Updates</code></li> <li>Set visibility to yourself or your admin group.</li> <li>Customize Columns:</li> <li>Add: <code>Email</code>, <code>Old Federation ID</code>, <code>New Federation ID</code>, <code>Updated At</code>.</li> <li>Save.</li> </ol> <p>\u2705 Now you can monitor every Federation ID update that the batch flow processed.</p>"},{"location":"how-to-guides/batch-update-federation-id/#summary","title":"\ud83d\udcda Summary","text":"<ul> <li>Existing users are updated automatically using a Scheduled Flow.</li> <li>Updates are logged into a custom object for easy auditing.</li> <li>A List View provides real-time visibility into which users were updated.</li> <li>This ensures that all Salesforce Federation IDs match our future Google Workspace accounts exactly.</li> </ul> <p>\u2728 If you need to re-run the batch update in the future, simply re-schedule or manually trigger the Flow.</p>"},{"location":"how-to-guides/bulk-delete-events-in-salesforce/","title":"How To: Bulk Delete Events in Salesforce","text":"<p>When a user accidentally creates a large number of recurring Events (e.g., hundreds of records), manually deleting them one by one is not practical. This guide shows how to identify and bulk delete Events safely using Salesforce tools.</p>"},{"location":"how-to-guides/bulk-delete-events-in-salesforce/#delete-events-using-developer-console-soql-query","title":"Delete Events Using Developer Console (SOQL Query)","text":"<ol> <li> <p>Open the Developer Console</p> <ul> <li>In Salesforce, click the \u2699\ufe0f (Setup gear) in the top right.</li> <li>Select Developer Console.</li> </ul> <p></p> </li> <li> <p>Open the Query Editor</p> <ul> <li>In the Developer Console, go to the bottom panel \u2192 Query Editor tab.</li> </ul> <p></p> </li> <li> <p>Run a SOQL Query to Identify Records</p> <ul> <li>Example query:     <pre><code>SELECT Id, Subject, ActivityDate, CreatedById\nFROM Event\nWHERE Subject LIKE '%%Bad Event Subject%%'\n</code></pre></li> <li>Replacing <code>%%Bad Event Subject%%</code> with the actual subject or criteria of the unwanted Events.</li> <li>Add filters such as <code>Subject LIKE '%Meeting%'</code> or <code>ActivityDate &gt;= 2025-09-01</code> to narrow results.</li> </ul> </li> <li> <p>Review the Results</p> <ul> <li>Confirm you\u2019re only pulling the unwanted Events.</li> <li>Export results if you want a record for audit.</li> </ul> </li> <li> <p>Delete the Records</p> <ul> <li>Copy the list of Ids and use Data Loader or Workbench (see below) to bulk delete.</li> <li>Alternatively, use Execute Anonymous with Apex (advanced). </li> </ul> </li> </ol>"},{"location":"how-to-guides/bulk-delete-events-in-salesforce/#optional-delete-in-the-event-registration-table","title":"Optional: Delete In The Event Registration Table","text":"<p>If the event has not yet been approved then it will be in the Event Registration table. You can and sholud delete it from there as well.</p> <ol> <li> <p>Open the Developer Console</p> <ul> <li>In Salesforce, click the \u2699\ufe0f (Setup gear) in the top right.</li> <li>Select Developer Console.</li> </ul> <p></p> </li> <li> <p>Open the Query Editor</p> <ul> <li>In the Developer Console, go to the bottom panel \u2192 Query Editor tab. </li> </ul> </li> <li> <p>Run a SOQL Query to Identify Records</p> <ul> <li>Example query:     <pre><code>SELECT ID, Status__c, Start__c, Name\nFROM Event_Registration__c\nWHERE Name LIKE '%%Evening Hike at James T Slavin%%'\n</code></pre></li> <li>Replacing <code>%%Evening Hike at James T Slavin%%</code> with the actual subject or criteria of the unwanted Events.</li> <li>Add filters such as <code>Name LIKE '%Meeting%'</code> or <code>Start__c &gt;= 2025-09-01</code> to narrow results.</li> </ul> </li> <li>Review the Results<ul> <li>Confirm you\u2019re only pulling the unwanted Event Registrations.</li> <li>Export results if you want a record for audit.</li> </ul> </li> <li>Delete the Records<ul> <li>Select the records you want to delete, then cick the Delete Row button. </li> </ul> </li> </ol>"},{"location":"how-to-guides/custom-calendar-lwc/","title":"Custom Calendar LWC Guide","text":"<p>This guide provides detailed instructions on deploying, configuring, and using the Custom Calendar Lightning Web Component (LWC).</p>"},{"location":"how-to-guides/custom-calendar-lwc/#features","title":"Features","text":"<ul> <li>Display a calendar with selectable days.</li> <li>Support for multiple calendars with color-coded events.</li> <li>Create, edit, and display events.</li> <li>Mock data support for local development.</li> </ul>"},{"location":"how-to-guides/custom-calendar-lwc/#project-structure","title":"Project Structure","text":"<ul> <li>LWC Component: <code>customCalendarLWC</code></li> <li><code>customCalendarLWC.js</code>: JavaScript logic for the calendar.</li> <li><code>customCalendarLWC.html</code>: HTML template for the calendar UI.</li> <li><code>customCalendarLWC.css</code>: Styling for the calendar.</li> <li><code>customCalendarLWC.js-meta.xml</code>: Metadata configuration for the component.</li> <li><code>customCalendarLWC.design</code>: Design configuration for Experience Builder.</li> <li>Apex Classes:</li> <li><code>CalendarController.cls</code>: Apex class to fetch and manage calendar data.</li> <li><code>CalendarControllerTest.cls</code>: Test class for <code>CalendarController</code>.</li> </ul>"},{"location":"how-to-guides/custom-calendar-lwc/#prerequisites","title":"Prerequisites","text":"<ol> <li>Salesforce CLI: Ensure you have the Salesforce CLI installed. You can download it from Salesforce CLI.</li> <li>Authentication: Authenticate with your Salesforce org using the following command:    <pre><code>sf login\n</code></pre></li> </ol>"},{"location":"how-to-guides/custom-calendar-lwc/#deployment","title":"Deployment","text":"<p>To deploy the component and its related Apex classes to your Salesforce org, use the following command:</p> <pre><code>sf project deploy start \\\n    --source-dir force-app/main/default/classes/CalendarController.cls \\\n    --source-dir force-app/main/default/classes/CalendarControllerTest.cls \\\n    --source-dir force-app/main/default/lwc/customCalendarLWC \\\n    --test-level RunSpecifiedTests \\\n    --tests CalendarControllerTest \\\n    --target-org webdev5@smi.org\n</code></pre>"},{"location":"how-to-guides/custom-calendar-lwc/#deployment-notes","title":"Deployment Notes","text":"<ul> <li>Replace <code>webdev5@smi.org</code> with your target org's username if different.</li> <li>The <code>--test-level RunSpecifiedTests</code> flag ensures that only the specified test class (<code>CalendarControllerTest</code>) is executed during deployment.</li> </ul>"},{"location":"how-to-guides/custom-calendar-lwc/#usage","title":"Usage","text":"<ol> <li>After deployment, add the <code>customCalendarLWC</code> component to a Lightning App Builder page or an Experience Builder site.</li> <li>Configure the <code>Calendar Title</code> property in the Experience Builder to customize the title displayed on the calendar.</li> </ol>"},{"location":"how-to-guides/custom-calendar-lwc/#local-development","title":"Local Development","text":"<p>To test the component locally:</p> <ol> <li>Use the Salesforce CLI to start the local development server:    <pre><code>sfdx force:lightning:lwc:start\n</code></pre></li> <li>Open the local development server in your browser to view and test the component.</li> </ol>"},{"location":"how-to-guides/custom-calendar-lwc/#testing","title":"Testing","text":"<p>The <code>CalendarControllerTest.cls</code> class includes unit tests for the <code>CalendarController</code> Apex class. These tests are executed during deployment to ensure the functionality is working as expected.</p> <p>To run the tests manually, use the following command:</p> <pre><code>sf apex run test --classnames CalendarControllerTest --target-org webdev5@smi.org\n</code></pre>"},{"location":"how-to-guides/custom-calendar-lwc/#support","title":"Support","text":"<p>For any issues or questions, please contact the project maintainer or refer to the Salesforce documentation for Lightning Web Components and Apex development.</p>"},{"location":"how-to-guides/delete-federation-id-from-users/","title":"Delete Federation ID From Users","text":"<p>This document explains the Delete Federation ID From 25 Users flow used for mass resetting user Federation IDs.</p> <p>This flow was critical when reconfiguring the Federation ID generation logic across all users, and was used to bulk clear existing Federation IDs before rebuilding them properly.</p>"},{"location":"how-to-guides/delete-federation-id-from-users/#flow-information","title":"\ud83d\udee0 Flow Information","text":"<ul> <li>Flow Name: <code>Delete Federation ID From 25 Users</code></li> <li>Flow URL: Delete Federation ID From 25 Users</li> <li>Flow Type: Scheduled-Triggered Flow</li> <li>Schedule: Daily (but primarily run manually during reset operations)</li> </ul>"},{"location":"how-to-guides/delete-federation-id-from-users/#flow-diagram-delete-federation-id-from-25-users","title":"\ud83d\uddbc Flow Diagram: Delete Federation ID From 25 Users","text":"<pre><code>(Start: Scheduled Daily or Manual Run)\n       \u2193\n[Get Records: Pull Users Without Federation ID (limit 25)]\n       \u2193\n[Decision: Records Present?]\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502 Has Records   \u2502                      \u2502 No Records                    \u2502\n    \u2502 (Users Found) \u2502                      \u2502 (No Users to Clear)            \u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n           \u2193                                             \u2193\n[Loop: Remove Federation ID]                      [Create Log Record: No Users]\n    \u2193\n[Assignment: Create Log Record for Each User]\n    \u2193\n[Assignment: Assign Empty Federation ID to Each User]\n    \u2193\n(After Last Loop)\n    \u2193\n[Update Records: Bulk Update Users (FederationId cleared)]\n    \u2193\n[Create Records: Bulk Create Log Records]\n    \u2193\n(End)\n</code></pre>"},{"location":"how-to-guides/delete-federation-id-from-users/#purpose","title":"\ud83d\udccb Purpose","text":"<ul> <li>Quickly clear (null out) the <code>FederationId</code> field for active User records.</li> <li>Remove incorrect or duplicate Federation IDs when the original creation formula was found to be flawed.</li> <li>Ensure that all Users could be assigned new, correct Federation IDs afterward.</li> </ul>"},{"location":"how-to-guides/delete-federation-id-from-users/#how-it-works","title":"\ud83d\udd0e How It Works","text":"<ol> <li>Pull Users Without Federation ID:</li> <li>Get up to 25 Users at a time who still have a populated FederationId.</li> <li> <p>Filters out integration users, inactive users, and others not needing modification.</p> </li> <li> <p>Decision: Records Present?:</p> </li> <li>If users are found \u2192 Continue.</li> <li> <p>If no users are found \u2192 Create a single Log entry and End.</p> </li> <li> <p>For Each User:</p> </li> <li>Create a Log Record capturing the removal action.</li> <li>Assign an empty value to FederationId (effectively nulling it).</li> <li> <p>Add the User and Log Record to their respective Collections.</p> </li> <li> <p>After Loop:</p> </li> <li>Update User Records in bulk (nulling Federation IDs).</li> <li> <p>Create Log Records in bulk for auditing.</p> </li> <li> <p>End.</p> </li> </ol>"},{"location":"how-to-guides/delete-federation-id-from-users/#manual-running","title":"\ud83d\udee0 Manual Running","text":"<ul> <li>This flow was manually triggered multiple times (about 60 clicks).</li> <li>Each run cleared Federation IDs for up to 25 users.</li> <li>Repeatedly running the flow cleared all users in manageable, batch-safe steps.</li> </ul> <p>\ud83d\udee0 Note: This method is \"quick and dirty\" \u2014 not perfect \u2014 but effective for a one-time reset.</p>"},{"location":"how-to-guides/delete-federation-id-from-users/#associated-logs","title":"\ud83d\udd0d Associated Logs","text":"<p>Logs are created under the custom app:</p> <ul> <li>App Name: <code>Remove Federation ID Logs</code></li> <li>Accessible via the App Launcher by searching for <code>Remove Federation ID Logs</code>.</li> <li>These records contain:</li> <li>Which User was cleared.</li> <li>When the clearing action happened.</li> <li>Original Federation ID values.</li> </ul> <p>\u2705 These logs provide full auditability of all Federation ID resets performed.</p>"},{"location":"how-to-guides/delete-federation-id-from-users/#lessons-learned","title":"\ud83d\udcda Lessons Learned","text":"<ul> <li>Always ensure Federation ID formulas are stable before mass applying them.</li> <li>Having a quick \"clear/reset\" tool ready can save significant time during cleanup efforts.</li> <li>Batching 25 records at a time avoids DML governor limits and memory overages.</li> </ul> <p>\u2728 This flow is retained for future administrative use if a Federation ID reset is ever needed again.</p>"},{"location":"how-to-guides/google-workspace-saml-idp/","title":"\ud83d\udee1\ufe0f Using Google Workspace as a SAML Identity Provider Only","text":"<p>This document explains how to configure Google Workspace so that it acts only as a SAML Identity Provider (IdP) for Salesforce logins \u2014 without giving users Gmail, Drive, or other Google Apps access.</p> <p>The goal is to make login easy for members while keeping Google Workspace invisible to them.</p>"},{"location":"how-to-guides/google-workspace-saml-idp/#goal","title":"\ud83c\udfaf Goal","text":"<ul> <li>Authenticate members into Salesforce via SAML Single Sign-On.</li> <li>Prevent members from accessing Gmail, Drive, Calendar, etc.</li> <li>Avoid sending unnecessary account emails to members.</li> <li>Keep Google Workspace \"silent\" \u2014 used only for authentication.</li> </ul>"},{"location":"how-to-guides/google-workspace-saml-idp/#steps-to-configure","title":"\u2705 Steps to Configure","text":""},{"location":"how-to-guides/google-workspace-saml-idp/#1-create-bare-bones-google-accounts","title":"1. Create Bare-Bones Google Accounts","text":"<ul> <li>In Google Admin Console:</li> <li>Go to Directory \u2192 Users \u2192 Add new user.</li> <li>When adding a user, uncheck \"Send login info to this email address\" to avoid sending a welcome email.</li> </ul> <p>Alternatively, when bulk importing users via CSV: - Do not specify notification email fields. - Upload users without triggering email alerts.</p> <p>\u26a1 Members will not be notified or required to interact with Google directly.</p>"},{"location":"how-to-guides/google-workspace-saml-idp/#2-restrict-access-to-google-apps","title":"2. Restrict Access to Google Apps","text":"<p>Set up an Organizational Unit (OU) to manage app access:</p> <ul> <li>Create a new OU called <code>IdP Only Users</code>.</li> <li>Move all SAML-only users into this OU.</li> <li>In Apps &gt; Google Workspace &gt; Settings for Org Units:</li> <li>Disable:<ul> <li>Gmail</li> <li>Google Drive</li> <li>Google Calendar</li> <li>Google Meet</li> <li>Google Chat</li> <li>Any other unneeded Google Apps</li> </ul> </li> <li>Leave enabled:</li> <li>Google Identity Services (required for SAML authentication)</li> </ul> <p>\u2705 This ensures users cannot use Google services \u2014 only authentication via SAML.</p>"},{"location":"how-to-guides/google-workspace-saml-idp/#3-manage-salesforce-user-records","title":"3. Manage Salesforce User Records","text":"<ul> <li>Maintain standard Salesforce users (create, deactivate as needed).</li> <li>Ensure each Salesforce User's Federation ID matches their Google Workspace Primary Email.</li> <li>Continue managing user permissions (Profiles, Roles, Permission Sets) within Salesforce.</li> </ul>"},{"location":"how-to-guides/google-workspace-saml-idp/#how-login-works-for-members","title":"\ud83d\udd25 How Login Works for Members","text":"Step What Happens Member visits Salesforce login page Member clicks \"Login with SSO\" Google Workspace authenticates identity (behind the scenes) Member is redirected into Salesforce <p>\ud83e\udde0 The member never directly logs into Google Workspace, sees a Gmail inbox, or manages a Google password.</p>"},{"location":"how-to-guides/google-workspace-saml-idp/#key-admin-reminders","title":"\ud83d\udccb Key Admin Reminders","text":"<ul> <li>When a member leaves, deactivate their Salesforce user and optionally suspend their Google Workspace account.</li> <li>If Spokane Mountaineer membership grows beyond the Nonprofit Google tier limits (currently ~2000 users), monitor your Workspace license usage.</li> <li>Keep a consistent naming convention for user emails, e.g., <code>firstname.lastname@yourorg.org</code>.</li> <li>Regularly audit your OUs to ensure proper separation of \"IdP Only\" users.</li> </ul>"},{"location":"how-to-guides/google-workspace-saml-idp/#optional-future-enhancements","title":"\ud83d\ude80 Optional Future Enhancements","text":"<ul> <li>Automate user creation in Google Workspace with scripts or APIs.</li> <li>Use Data Loader in Salesforce for batch updates to Federation IDs.</li> <li>Implement monitoring to ensure consistency between Google and Salesforce user directories.</li> </ul>"},{"location":"how-to-guides/google-workspace-saml-idp/#summary","title":"\ud83e\udde0 Summary","text":"Area Responsibility Google Workspace Authentication Only (no Apps access) Salesforce User Management, Authorization, Permissions Member Experience Simple, no new accounts to manage <p>By following this setup, your members will enjoy a seamless, simplified login experience, and your admin team will maintain full control over access without additional complexity.</p>"},{"location":"how-to-guides/keepalive-sessions/","title":"KeepAlive Sessions in Salesforce Experience Cloud","text":"<p>This page documents how we implemented a session keep-alive strategy for our Salesforce Experience Cloud site, and how to maintain it over time.</p>"},{"location":"how-to-guides/keepalive-sessions/#testing-results","title":"Testing Results","text":"<p>This method has been tested but does not resolve the issue of users being logged out prematurely. Further investigation and alternative solutions may be required.</p>"},{"location":"how-to-guides/keepalive-sessions/#why-we-did-this","title":"Why We Did This","text":"<p>By default, users are logged out of our Experience Cloud site after 24 hours of inactivity. We wanted to improve the user experience by reducing the frequency of session timeouts, especially for members who leave a tab open for long periods.</p>"},{"location":"how-to-guides/keepalive-sessions/#how-it-works","title":"How It Works","text":"<p>We created a lightweight Aura component called <code>keepAlive</code>, which silently pings a no-op Apex method (<code>KeepAliveController.ping()</code>) every 10 minutes. This keeps the user session active as long as the tab remains open.</p> <ul> <li>Component Name: <code>keepAlive</code></li> <li>Apex Controller: <code>KeepAliveController</code></li> <li>Ping Interval: 10 minutes</li> <li>Location: The component is added to the site's shared header layout to ensure it runs on all pages.</li> </ul>"},{"location":"how-to-guides/keepalive-sessions/#how-we-built-it","title":"How We Built It","text":"<ol> <li> <p>Created Apex Class: <code>KeepAliveController</code></p> <ul> <li>Public, static, and marked <code>@AuraEnabled</code></li> <li>Contains an empty <code>ping()</code> method</li> </ul> </li> <li> <p>Created Aura Component: <code>keepAlive</code></p> <ul> <li>On page load, starts a JS <code>setInterval</code> timer that calls <code>KeepAliveController.ping()</code> every 10 minutes</li> <li>Logs results to the browser console for debugging</li> </ul> </li> <li> <p>Added the component to the site header in Experience Builder</p> <ul> <li>Ensures it loads on every page without duplicating it per page</li> </ul> </li> <li> <p>Tested in browser using DevTools (Console + Network tabs)</p> </li> </ol>"},{"location":"how-to-guides/keepalive-sessions/#maintaining-apex-class-access","title":"Maintaining Apex Class Access","text":"<p>If new user profiles are added, or users report seeing this error in the Development Tools Console:</p> <p><code>\"You do not have access to the Apex class named 'KeepAliveController'\"</code></p> <p>\u2026then you need to grant access to the Apex class. Here's how:</p>"},{"location":"how-to-guides/keepalive-sessions/#steps-to-update-profile-apex-class-access","title":"\ud83d\udd27 Steps to Update Profile &gt; Apex Class Access","text":"<ol> <li>Go to Setup &gt; Profiles</li> <li>Find and click on the profile name (e.g. <code>SM Community Plus Member</code>)</li> <li>Scroll down to Apex Class Access</li> <li>Click Edit</li> <li>Move <code>KeepAliveController</code> from the Available list to the Enabled list</li> <li>Click Save</li> </ol>"},{"location":"how-to-guides/keepalive-sessions/#verifying-its-working","title":"Verifying It's Working","text":"<ol> <li>Open the browser's DevTools &gt; Console</li> <li>Look for log messages like: <code>[KeepAlive] Pinging server to keep session alive\u2026 [KeepAlive] Ping response: SUCCESS</code></li> <li>Visit Setup &gt; Session Management to view real-time session activity</li> </ol>"},{"location":"how-to-guides/keepalive-sessions/#contact","title":"Contact","text":"<p>If you're troubleshooting this feature or extending it, contact webdev@spokanemountaineers.org or check the source code in our GitHub repository.</p>"},{"location":"how-to-guides/salesforce-development-console-cheatsheet/","title":"Salesforce Development Console Cheatsheet","text":"<p>This page is a quick reference for using the Salesforce Developer Console, including common tasks and useful tips.</p>"},{"location":"how-to-guides/salesforce-development-console-cheatsheet/#frequently-used-queries","title":"Frequently Used Queries","text":"<ul> <li>List all standard and custom objects:     <pre><code>SELECT QualifiedApiName\nFROM EntityDefinition\nORDER BY QualifiedApiName\n</code></pre></li> </ul>"},{"location":"how-to-guides/salesforce-development-console-cheatsheet/#frequently-used-commands","title":"Frequently Used Commands","text":"<ul> <li>List all fields related to a specific object using <code>sf</code> <pre><code>sf force:schema:sobject:describe -s Event_Participant__c | jq -r .fields[].name\n</code></pre></li> </ul>"},{"location":"how-to-guides/update-experience-cloud-favicon/","title":"Updating the Favicon for an Experience Cloud Site","text":"<p>This guide shows how to update the favicon (<code>favicon.ico</code>) for a Salesforce Experience Cloud site when the site template does not support favicon branding through the standard Branding settings.</p>"},{"location":"how-to-guides/update-experience-cloud-favicon/#step-1-upload-the-favicon-as-a-static-resource","title":"Step 1: Upload the Favicon as a Static Resource","text":"<ol> <li>Navigate to Setup \u2192 Static Resources.</li> <li>Click New.</li> <li>Fill out the form:</li> <li>Name: <code>favicon_ico</code></li> <li>File: Upload your <code>favicon.ico</code> file</li> <li>Cache Control: <code>Public</code></li> <li>Save the static resource.</li> </ol> <p>\ud83d\udca1 Best format is a <code>.ico</code> file at 16x16 or 32x32 pixels.</p>"},{"location":"how-to-guides/update-experience-cloud-favicon/#step-2-add-a-reference-to-the-favicon-in-the-site-head","title":"Step 2: Add a Reference to the Favicon in the Site Head","text":"<ol> <li>Go to Setup \u2192 Digital Experiences \u2192 All Sites.</li> <li>Click Builder next to your site.</li> <li>In Experience Builder:</li> <li>Click the gear icon (\u2699\ufe0f) in the top right.</li> <li>Go to Advanced \u2192 Edit Head Markup.</li> <li>Add the following HTML:</li> </ol> <pre><code>&lt;link rel=\"icon\" type=\"image/x-icon\" href=\"/resource/favicon_ico\" /&gt;\n</code></pre> <pre><code>Replace FaviconICO with the name you gave your static resource if it differs.\n</code></pre> <ol> <li>Click Done and Publish your site.</li> </ol>"},{"location":"how-to-guides/update-experience-cloud-favicon/#troubleshooting","title":"Troubleshooting","text":"<ul> <li> <p>If the new favicon doesn't show up immediately:</p> </li> <li> <p>Open the site in an incognito window.</p> </li> <li>Clear your browser cache.</li> <li>Ensure the static resource is publicly accessible.</li> </ul>"},{"location":"how-to-guides/update-experience-cloud-favicon/#example","title":"\u2705 Example","text":"<p>If your favicon file is named favicon.ico and uploaded as a static resource named FaviconICO, the browser will now use:</p> <pre><code>&lt;link rel=\"icon\" type=\"image/x-icon\" href=\"/resource/FaviconICO\" /&gt;\n</code></pre>"},{"location":"how-to-guides/update-experience-cloud-favicon/#why-this-is-needed","title":"\ud83d\udd01 Why This is Needed","text":"<p>Some Experience Cloud templates (e.g., Help Center, Customer Service) do not offer a \"Branding\" section in the settings UI. In those cases, the favicon must be manually added via the \\ section."},{"location":"how-to-guides/website-editing/","title":"Editing the Spokane Mountaineers Website","text":"<p>This guide walks through how to update content on the Spokane Mountaineers public website, including page editing, image management, and maintaining our Experience Cloud infrastructure.</p>"},{"location":"how-to-guides/website-editing/#admin-access","title":"\ud83d\udd10 Admin Access","text":"<p>To access administrative tools, log in at:</p> <p>\ud83d\udc49 https://spokanemountaineers.my.salesforce.com</p> <p>If you need credentials or access permissions, contact the tech team.</p>"},{"location":"how-to-guides/website-editing/#public-website","title":"\ud83c\udf10 Public Website","text":"<p>The public-facing site is hosted at:</p> <p>\ud83d\udc49 https://www.spokanemountaineers.org</p> <p>It is powered by Salesforce Experience Cloud (Aura framework) and managed using Experience Builder and Salesforce Setup.</p>"},{"location":"how-to-guides/website-editing/#helpful-salesforce-links","title":"\ud83e\udded Helpful Salesforce Links","text":"<p>Here are commonly used Salesforce admin tools:</p> Name Link Setup Home Setup Digital Experiences Experience Builder User Management Users <p>Bookmark these for easy access when managing site content or user permissions.</p>"},{"location":"how-to-guides/website-editing/#editing-pages-in-experience-builder","title":"\u270f\ufe0f Editing Pages in Experience Builder","text":"<ol> <li>Navigate to Digital Experiences.</li> <li>Click Builder next to the <code>Spokane Mountaineers</code> site.</li> <li>In Builder, you can:</li> <li>Click on page sections to edit content</li> <li>Add or remove components from the layout</li> <li>Update navigation and metadata</li> </ol>"},{"location":"how-to-guides/website-editing/#adding-or-replacing-images","title":"\ud83d\uddbc Adding or Replacing Images","text":"<ol> <li>In Builder, select the image component you want to change.</li> <li>Click Upload Image or choose from existing Site Assets.</li> <li>Use optimized images in <code>.jpg</code>, <code>.png</code>, or <code>.webp</code> format, ideally under 1MB.</li> </ol>"},{"location":"how-to-guides/website-editing/#publishing-changes","title":"\u2705 Publishing Changes","text":"<p>After making edits:</p> <ol> <li>Click Publish in the top-right corner of Experience Builder.</li> <li>Choose Publish to All to make the changes live.</li> <li>Verify by visiting spokanemountaineers.org.</li> </ol> <p>You can also use the Preview button to test changes before publishing.</p>"},{"location":"how-to-guides/website-editing/#advanced-editing-admins-only","title":"\ud83d\udee0 Advanced Editing (Admins Only)","text":"<p>For more complex changes, like updating custom Aura components:</p> <ul> <li>Use VS Code with the Salesforce CLI</li> <li>Deploy changes via <code>sf project deploy start</code></li> <li>Use Apex, Lightning components, and custom objects responsibly</li> </ul> <p>If you're not familiar with these tools, contact a dev/tech lead before making changes.</p>"},{"location":"how-to-guides/website-editing/#related-docs","title":"\ud83d\udcdd Related Docs","text":"<ul> <li>Customize Favicon</li> <li>KeepAlive Sessions</li> </ul>"},{"location":"how-to-guides/website-editing/#contributing","title":"Contributing","text":"<p>This site is maintained by volunteers. If you'd like to contribute documentation or suggest edits:</p> <ul> <li>Fork or clone the repository: github.com/jasonkradams/smi</li> <li>Make changes in Markdown</li> <li>Submit a pull request</li> </ul> <p>If you're unsure how to get started, contact the tech team or open an issue in the repository.</p>"}]}